{"version":3,"sources":["components/ContactItem/ContactItem.module.css","components/ContactList/ContactList.module.css","components/Form/Form.module.css","components/Form/Form.js","components/Filter/Filter.js","components/ContactItem/ContactItem.js","components/ContactList/ContactList.js","App.js","utils/localStorage.js","index.js","components/Filter/Filter.module.css"],"names":["module","exports","Form","addContact","contacts","useState","name","setName","number","setNumber","reset","checkContactIdentity","find","contact","toLowerCase","alertIdentity","alert","nameID","shortid","generate","numberID","className","s","form","onSubmit","event","preventDefault","newContact","id","undefined","label","htmlFor","input","type","value","pattern","title","required","onChange","e","target","formBtn","Filter","onFilterInputEnter","onFilterOut","filterValue","filterLabel","filterInput","onBlur","ContactItem","phoneNumber","onDeleteBtn","contactListItem","deleteContactBtn","onClick","ContactList","contactsData","contactList","map","App","setContacts","filter","setFilter","useEffect","savedContacts","key","items","localStorage","getItem","JSON","parse","error","Error","getFromLS","setItem","stringify","saveToLS","obj","prevState","includes","contactId","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8IACAA,EAAOC,QAAU,CAAC,gBAAkB,qCAAqC,iBAAmB,wC,mBCA5FD,EAAOC,QAAU,CAAC,YAAc,mC,uCCAhCD,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,QAAU,wB,0ICK/F,SAASC,EAAT,GAAyC,IAAzBC,EAAwB,EAAxBA,WAAYC,EAAY,EAAZA,SACzC,EAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,IAArC,mBAAOG,EAAP,KAAeC,EAAf,KAkBMC,EAAQ,WACZH,EAAQ,IACRE,EAAU,KAGNE,EAAuB,WAI3B,OAHiBP,EAASQ,MACxB,SAAAC,GAAO,OAAIA,EAAQP,KAAKQ,gBAAkBR,EAAKQ,kBAK7CC,EAAgB,SAAAT,GACpBU,MAAM,GAAD,OAAIV,EAAJ,kCACLI,KAGIO,EAASC,IAAQC,WACjBC,EAAWF,IAAQC,WAEzB,OACE,uBAAME,UAAWC,IAAEC,KAAMC,SArCA,SAAAC,GACzBA,EAAMC,iBACN,IACMC,EAAa,CACjBC,GAFgBV,IAAQC,WAGxBb,OACAE,eAE6BqB,IAA3BlB,KACFR,EAAWwB,GACXjB,KAEAK,EAAcT,IAyBhB,UACE,uBAAOe,UAAWC,IAAEQ,MAAOC,QAASd,EAApC,kBAGA,uBACEW,GAAIX,EACJI,UAAWC,IAAEU,MACbC,KAAK,OACL3B,KAAK,OACL4B,MAAO5B,EACP6B,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAU,SAAAC,GAAC,OAAIhC,EAAQgC,EAAEC,OAAON,UAElC,uBAAOb,UAAWC,IAAEQ,MAAOC,QAASX,EAApC,oBAGA,uBACEQ,GAAIR,EACJC,UAAWC,IAAEU,MACbC,KAAK,MACL3B,KAAK,SACL4B,MAAO1B,EACP2B,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAU,SAAAC,GAAC,OAAI9B,EAAU8B,EAAEC,OAAON,UAEpC,wBAAQb,UAAWC,IAAEmB,QAASR,KAAK,SAAnC,4B,oBCxES,SAASS,EAAT,GAIX,IAHFC,EAGC,EAHDA,mBACAC,EAEC,EAFDA,YACAC,EACC,EADDA,YAEA,OACE,wBAAOxB,UAAWC,IAAEwB,YAApB,kCAEE,uBACEb,KAAK,OACLC,MAAOW,EACPxB,UAAWC,IAAEyB,YACbT,SAAUK,EACVK,OAAQJ,O,qBCbD,SAASK,EAAT,GAA0D,IAAnC3C,EAAkC,EAAlCA,KAAM4C,EAA4B,EAA5BA,YAAaC,EAAe,EAAfA,YACvD,OACE,qBAAI9B,UAAWC,IAAE8B,gBAAjB,UACE,8BACG9C,EADH,KACU,+BAAO4C,OAEjB,wBACE7B,UAAWC,IAAE+B,iBACbpB,KAAK,SACLqB,QAASH,EAHX,uB,qBCLS,SAASI,EAAT,GAAqD,IAA9BC,EAA6B,EAA7BA,aAAcL,EAAe,EAAfA,YAClD,OACE,oBAAI9B,UAAWC,IAAEmC,YAAjB,SACGD,EAAaE,KAAI,gBAAG9B,EAAH,EAAGA,GAAItB,EAAP,EAAOA,KAAME,EAAb,EAAaA,OAAb,OAChB,cAACyC,EAAD,CAEE3C,KAAMA,EACN4C,YAAa1C,EACb2C,YAAa,kBAAMA,EAAYvB,KAH1BA,QCFA,SAAS+B,IACtB,MAAgCtD,mBAAS,IAAzC,mBAAOD,EAAP,KAAiBwD,EAAjB,KACA,EAA4BvD,mBAAS,IAArC,mBAAOwD,EAAP,KAAeC,EAAf,KAEAC,qBAAU,WACR,IAAMC,ECLe,SAAAC,GACvB,IACE,IAAMC,EAAQC,aAAaC,QAAQH,GACnC,OAAOC,EAAQG,KAAKC,MAAMJ,GAAS,KACnC,MAAOK,GACP,MAAM,IAAIC,ODAYC,CAAU,YAChCT,GAAkBJ,EAAYI,KAC7B,IAEHD,qBAAU,YCjBY,SAACE,EAAK/B,GAC5B,IACEiC,aAAaO,QAAQT,EAAKI,KAAKM,UAAUzC,IACzC,MAAOqC,GACP,MAAM,IAAIC,ODcVI,CAAS,WAAYxE,KACpB,CAACA,IAgBJ,OACI,qCACE,2CACA,cAACF,EAAD,CACEC,WAlBmB,SAAA0E,GACzBjB,GAAY,SAAAkB,GAAS,4BAASA,GAAT,CAAoBD,QAkBnCzE,SAAUA,IAGZ,0CACA,cAACsC,EAAD,CACEC,mBAAoB,SAAAJ,GAAC,OAAEuB,EAAUvB,EAAEC,OAAON,QAC1CU,YAAa,kBAAIkB,EAAU,KAC3BjB,YAAagB,IAGf,cAACN,EAAD,CACEC,aAzBCpD,EAASyD,QAAO,SAAAhD,GAAO,OAC5BA,EAAQP,KAAKQ,cAAciE,SAASlB,EAAO/C,kBAyBvCqC,YArBc,SAAA6B,GACpBpB,GAAY,SAAAkB,GAAS,OAAEA,EAAUjB,QAAO,SAAAhD,GAAO,OAAIA,EAAQe,KAAOoD,cE3BtEC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACxB,EAAD,MAEFyB,SAASC,eAAe,U,kBCR1BrF,EAAOC,QAAU,CAAC,YAAc,4BAA4B,YAAc,+B","file":"static/js/main.d7b0f3de.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactListItem\":\"ContactItem_contactListItem__3lXI7\",\"deleteContactBtn\":\"ContactItem_deleteContactBtn__19gZS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__10CG-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"Form_form__3dJrd\",\"label\":\"Form_label__2GqHk\",\"input\":\"Form_input__1LLrf\",\"formBtn\":\"Form_formBtn__2hw_0\"};","import { useState } from 'react';\nimport shortid from 'shortid';\nimport PropTypes from 'prop-types';\n\nimport s from './Form.module.css';\n\nexport default function Form({ addContact, contacts }) {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const onSubmitAddContact = event => {\n    event.preventDefault();\n    const contactID = shortid.generate();\n    const newContact = {\n      id: contactID,\n      name,\n      number,\n    };\n    if (checkContactIdentity() === undefined) {\n      addContact(newContact);\n      reset();\n    } else {\n      alertIdentity(name);\n    }\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const checkContactIdentity = () => {\n    const identity = contacts.find(\n      contact => contact.name.toLowerCase() === name.toLowerCase(),\n    );\n    return identity;\n  };\n\n  const alertIdentity = name => {\n    alert(`${name} is already in your contacts!`);\n    reset();\n  };\n\n  const nameID = shortid.generate();\n  const numberID = shortid.generate();\n\n  return (\n    <form className={s.form} onSubmit={onSubmitAddContact}>\n      <label className={s.label} htmlFor={nameID}>\n        Name\n      </label>\n      <input\n        id={nameID}\n        className={s.input}\n        type=\"text\"\n        name=\"name\"\n        value={name}\n        pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n        title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n        required\n        onChange={e => setName(e.target.value)}\n      />\n      <label className={s.label} htmlFor={numberID}>\n        Number\n      </label>\n      <input\n        id={numberID}\n        className={s.input}\n        type=\"tel\"\n        name=\"number\"\n        value={number}\n        pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n        title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n        required\n        onChange={e => setNumber(e.target.value)}\n      />\n      <button className={s.formBtn} type=\"submit\">\n        Add contact\n      </button>\n    </form>\n  );\n}\n\nForm.propTypes = {\n  addContact: PropTypes.func.isRequired,\n  contacts: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport s from './Filter.module.css';\n\nexport default function Filter({\n  onFilterInputEnter,\n  onFilterOut,\n  filterValue,\n}) {\n  return (\n    <label className={s.filterLabel}>\n      Find contacts by name\n      <input\n        type=\"text\"\n        value={filterValue}\n        className={s.filterInput}\n        onChange={onFilterInputEnter}\n        onBlur={onFilterOut}\n      />\n    </label>\n  );\n}\n\nFilter.propTypes = {\n  onFilterInputEnter: PropTypes.func.isRequired,\n  onFilterOut: PropTypes.func.isRequired,\n  filterValue: PropTypes.string.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport s from './ContactItem.module.css';\n\nexport default function ContactItem({ name, phoneNumber, onDeleteBtn }) {\n  return (\n    <li className={s.contactListItem}>\n      <p>\n        {name}: <span>{phoneNumber}</span>\n      </p>\n      <button\n        className={s.deleteContactBtn}\n        type=\"button\"\n        onClick={onDeleteBtn}\n      >\n        Delete\n      </button>\n    </li>\n  );\n}\n\nContactItem.propTypes = {\n  name: PropTypes.string.isRequired,\n  phoneNumber: PropTypes.string.isRequired,\n  onDeleteBtn: PropTypes.func.isRequired,\n};\n","import PropTypes from 'prop-types';\n\nimport ContactItem from '../ContactItem';\nimport s from './ContactList.module.css';\n\nexport default function ContactList({ contactsData, onDeleteBtn }) {\n  return (\n    <ul className={s.contactList}>\n      {contactsData.map(({ id, name, number }) => (\n        <ContactItem\n          key={id}\n          name={name}\n          phoneNumber={number}\n          onDeleteBtn={() => onDeleteBtn(id)}\n        />\n      ))}\n    </ul>\n  );\n}\n\nContactList.propTypes = {\n  contactsData: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.string.isRequired,\n      name: PropTypes.string.isRequired,\n      number: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n  onDeleteBtn: PropTypes.func.isRequired,\n};\n","import { useEffect, useState } from 'react';\n\nimport Form from './components/Form';\nimport Filter from './components/Filter';\nimport ContactList from './components/ContactList';\nimport { saveToLS, getFromLS } from './utils/localStorage';\n\n\nexport default function App() {\n  const [contacts, setContacts] = useState([]);\n  const [filter, setFilter] = useState('');\n\n  useEffect(() => {\n    const savedContacts = getFromLS('contacts');\n    savedContacts &&  setContacts(savedContacts);\n  }, []);\n\n  useEffect(() => {\n    saveToLS('contacts', contacts);\n  }, [contacts]);\n\n  const updateContactsList = obj => {\n    setContacts(prevState => ([...prevState, obj]));\n  };\n\n  const findContactsByFilter = () => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filter.toLowerCase()),\n    );\n  };\n\n  const deleteContact = contactId => {\n    setContacts(prevState=>prevState.filter(contact => contact.id !== contactId))    \n  };\n\n  return (\n      <>\n        <h1>Phonebook</h1>\n        <Form\n          addContact={updateContactsList}\n          contacts={contacts}\n        />\n\n        <h2>Contacts</h2>\n        <Filter\n          onFilterInputEnter={e=>setFilter(e.target.value)}\n          onFilterOut={()=>setFilter('')}\n          filterValue={filter}\n        />\n\n        <ContactList\n          contactsData={findContactsByFilter()}\n          onDeleteBtn={deleteContact}\n        />\n      </>\n    );\n}\n\n","export const saveToLS = (key, value) => {\n  try {\n    localStorage.setItem(key, JSON.stringify(value));\n  } catch (error) {\n    throw new Error();\n  }\n};\n\nexport const getFromLS = key => {\n  try {\n    const items = localStorage.getItem(key);\n    return items ? JSON.parse(items) : null;\n  } catch (error) {\n    throw new Error();\n  }\n};\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"filterLabel\":\"Filter_filterLabel__1thFp\",\"filterInput\":\"Filter_filterInput__1YFqi\"};"],"sourceRoot":""}